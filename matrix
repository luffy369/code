#include <iostream>
#include <vector>

using namespace std;

class Matrix {
public:
    vector<vector<int>> data;

    Matrix(int rows, int cols) {
        data.resize(rows, vector<int>(cols));
    }

    void inputMatrix() {
        cout << "Enter the matrix elements:" << endl;
        for (int i = 0; i < data.size(); i++) {
            for (int j = 0; j < data[i].size(); j++) {
                cin >> data[i][j];
            }
        }
    }

    void displayMatrix() {
        for (int i = 0; i < data.size(); i++) {
            for (int j = 0; j < data[i].size(); j++) {
                cout << data[i][j] << " ";
            }
            cout << endl;
        }
    }
};

Matrix addMatrix(const Matrix& A, const Matrix& B) {
    int rows = A.data.size();
    int cols = A.data[0].size();
    Matrix result(rows, cols);

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result.data[i][j] = A.data[i][j] + B.data[i][j];
        }
    }

    return result;
}

Matrix subMatrix(const Matrix& A, const Matrix& B) {
    int rows = A.data.size();
    int cols = A.data[0].size();
    Matrix result(rows, cols);

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result.data[i][j] = A.data[i][j] - B.data[i][j];
        }
    }

    return result;
}

Matrix multiplyMatrix(const Matrix& A, const Matrix& B) {
    int rows_A = A.data.size();
    int cols_A = A.data[0].size();
    int cols_B = B.data[0].size();
    Matrix result(rows_A, cols_B);

    for (int i = 0; i < rows_A; i++) {
        for (int j = 0; j < cols_B; j++) {
            result.data[i][j] = 0;
            for (int k = 0; k < cols_A; k++) {
                result.data[i][j] += A.data[i][k] * B.data[k][j];
            }
        }
    }

    return result;
}

int main() {
    int rows, cols;

    cout << "Enter the number of rows and columns for matrices A and B: ";
    cin >> rows >> cols;

    Matrix A(rows, cols);
    Matrix B(rows, cols);

    cout << "Matrix A:" << endl;
    A.inputMatrix();

    cout << "Matrix B:" << endl;
    B.inputMatrix();

    cout << "Matrix A:" << endl;
    A.displayMatrix();

    cout << "Matrix B:" << endl;
    B.displayMatrix();

    Matrix additionResult = addMatrix(A, B);
    Matrix subtractionResult = subMatrix(A, B);
    Matrix multiplicationResult = multiplyMatrix(A, B);

    cout << "Matrix A + B:" << endl;
    additionResult.displayMatrix();

    cout << "Matrix A - B:" << endl;
    subtractionResult.displayMatrix();

    cout << "Matrix A * B:" << endl;
    multiplicationResult.displayMatrix();

    return 0;
}
